package org.openeo.spring.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import org.openeo.spring.model.ProcessGraphWithMetadata;
import org.openapitools.jackson.nullable.JsonNullable;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * The metadata of a secondary web service that has been submitted by the authenticated user.
 */
@ApiModel(description = "The metadata of a secondary web service that has been submitted by the authenticated user.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-07-02T08:45:00.334+02:00[Europe/Rome]")
public class Service   {
  @JsonProperty("id")
  private String id;

  @JsonProperty("title")
  private JsonNullable<String> title = JsonNullable.undefined();

  @JsonProperty("description")
  private JsonNullable<String> description = JsonNullable.undefined();

  @JsonProperty("url")
  private URI url;

  @JsonProperty("type")
  private String type;

  @JsonProperty("enabled")
  private Boolean enabled = true;

  @JsonProperty("process")
  private ProcessGraphWithMetadata process;

  @JsonProperty("configuration")
  private Object _configuration;

  @JsonProperty("attributes")
  private Object attributes;

  @JsonProperty("created")
  @org.springframework.format.annotation.DateTimeFormat(iso = org.springframework.format.annotation.DateTimeFormat.ISO.DATE_TIME)
  private OffsetDateTime created;

  @JsonProperty("plan")
  private String plan;

  @JsonProperty("costs")
  private JsonNullable<BigDecimal> costs = JsonNullable.undefined();

  @JsonProperty("budget")
  private JsonNullable<BigDecimal> budget = JsonNullable.undefined();

  public Service id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of the secondary web service, generated by the back-end during creation. MUST match the specified pattern.
   * @return id
  */
  @ApiModelProperty(example = "wms-a3cca9", required = true, value = "Unique identifier of the secondary web service, generated by the back-end during creation. MUST match the specified pattern.")
  @NotNull

@Pattern(regexp="^[\\w\\-\\.~]+$") 
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Service title(String title) {
    this.title = JsonNullable.of(title);
    return this;
  }

  /**
   * A short description to easily distinguish entities.
   * @return title
  */
  @ApiModelProperty(example = "NDVI based on Sentinel 2", value = "A short description to easily distinguish entities.")


  public JsonNullable<String> getTitle() {
    return title;
  }

  public void setTitle(JsonNullable<String> title) {
    this.title = title;
  }

  public Service description(String description) {
    this.description = JsonNullable.of(description);
    return this;
  }

  /**
   * Detailed multi-line description to explain the entity.  [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich text representation.
   * @return description
  */
  @ApiModelProperty(example = "Deriving minimum NDVI measurements over pixel time series of Sentinel 2", value = "Detailed multi-line description to explain the entity.  [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich text representation.")


  public JsonNullable<String> getDescription() {
    return description;
  }

  public void setDescription(JsonNullable<String> description) {
    this.description = description;
  }

  public Service url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * URL at which the secondary web service is accessible. Doesn't necessarily need to be located within the API.
   * @return url
  */
  @ApiModelProperty(example = "https://example.openeo.org/wms/wms-a3cca9", required = true, value = "URL at which the secondary web service is accessible. Doesn't necessarily need to be located within the API.")
  @NotNull

  @Valid

  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }

  public Service type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Definition of the service type to access result data. All available service types can be retrieved via `GET /service_types`. Service types MUST be accepted *case insensitive*.
   * @return type
  */
  @ApiModelProperty(example = "wms", required = true, value = "Definition of the service type to access result data. All available service types can be retrieved via `GET /service_types`. Service types MUST be accepted *case insensitive*.")
  @NotNull


  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Service enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Describes whether a secondary web service is responding to requests (true) or not (false). Defaults to true. Disabled services don't produce any costs.
   * @return enabled
  */
  @ApiModelProperty(required = true, value = "Describes whether a secondary web service is responding to requests (true) or not (false). Defaults to true. Disabled services don't produce any costs.")
  @NotNull


  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public Service process(ProcessGraphWithMetadata process) {
    this.process = process;
    return this;
  }

  /**
   * Get process
   * @return process
  */
  @ApiModelProperty(value = "")

  @Valid

  public ProcessGraphWithMetadata getProcess() {
    return process;
  }

  public void setProcess(ProcessGraphWithMetadata process) {
    this.process = process;
  }

  public Service _configuration(Object _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Map of arguments, i.e. the parameter names supported by the secondary web service combined with actual values. See `GET /service_types` for supported parameters and valid arguments. For example, this could specify the required version of the service, visualization details or any other service dependant configuration.
   * @return _configuration
  */
  @ApiModelProperty(example = "{\"version\":\"1.3.0\"}", value = "Map of arguments, i.e. the parameter names supported by the secondary web service combined with actual values. See `GET /service_types` for supported parameters and valid arguments. For example, this could specify the required version of the service, visualization details or any other service dependant configuration.")


  public Object getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(Object _configuration) {
    this._configuration = _configuration;
  }

  public Service attributes(Object attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Additional attributes of the secondary web service, e.g. available layers for a WMS based on the bands in the underlying GeoTiff.
   * @return attributes
  */
  @ApiModelProperty(example = "{\"layers\":[\"ndvi\",\"evi\"]}", value = "Additional attributes of the secondary web service, e.g. available layers for a WMS based on the bands in the underlying GeoTiff.")


  public Object getAttributes() {
    return attributes;
  }

  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }

  public Service created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Date and time of creation, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.
   * @return created
  */
  @ApiModelProperty(example = "2017-01-01T09:32:12Z", value = "Date and time of creation, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.")

  @Valid

  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Service plan(String plan) {
    this.plan = plan;
    return this;
  }

  /**
   * The billing plan to process and charge the job with. The plans can be retrieved by calling `GET /`. Billing plans MUST be accepted *case insensitive*.
   * @return plan
  */
  @ApiModelProperty(example = "free", value = "The billing plan to process and charge the job with. The plans can be retrieved by calling `GET /`. Billing plans MUST be accepted *case insensitive*.")


  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }

  public Service costs(BigDecimal costs) {
    this.costs = JsonNullable.of(costs);
    return this;
  }

  /**
   * An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If no currency is set, this field MUST be `null`.
   * @return costs
  */
  @ApiModelProperty(example = "12.98", value = "An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If no currency is set, this field MUST be `null`.")

  @Valid

  public JsonNullable<BigDecimal> getCosts() {
    return costs;
  }

  public void setCosts(JsonNullable<BigDecimal> costs) {
    this.costs = costs;
  }

  public Service budget(BigDecimal budget) {
    this.budget = JsonNullable.of(budget);
    return this;
  }

  /**
   * Maximum amount of costs the request is allowed to produce. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If no currency is set, this field MUST NOT be a number.   If possible, back-ends SHOULD reject jobs with openEO error `PaymentRequired` if the budget is too low to process the request completely. Otherwise, when reaching the budget jobs MAY try to return partial results if possible. Otherwise the request and results are discarded. Users SHOULD be warned by clients that reaching the budget MAY discard the results and that setting this value should be well-wrought.   Setting the budget to `null` means there is no specified budget.
   * @return budget
  */
  @ApiModelProperty(example = "100", value = "Maximum amount of costs the request is allowed to produce. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If no currency is set, this field MUST NOT be a number.   If possible, back-ends SHOULD reject jobs with openEO error `PaymentRequired` if the budget is too low to process the request completely. Otherwise, when reaching the budget jobs MAY try to return partial results if possible. Otherwise the request and results are discarded. Users SHOULD be warned by clients that reaching the budget MAY discard the results and that setting this value should be well-wrought.   Setting the budget to `null` means there is no specified budget.")

  @Valid

  public JsonNullable<BigDecimal> getBudget() {
    return budget;
  }

  public void setBudget(JsonNullable<BigDecimal> budget) {
    this.budget = budget;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Service service = (Service) o;
    return Objects.equals(this.id, service.id) &&
        Objects.equals(this.title, service.title) &&
        Objects.equals(this.description, service.description) &&
        Objects.equals(this.url, service.url) &&
        Objects.equals(this.type, service.type) &&
        Objects.equals(this.enabled, service.enabled) &&
        Objects.equals(this.process, service.process) &&
        Objects.equals(this._configuration, service._configuration) &&
        Objects.equals(this.attributes, service.attributes) &&
        Objects.equals(this.created, service.created) &&
        Objects.equals(this.plan, service.plan) &&
        Objects.equals(this.costs, service.costs) &&
        Objects.equals(this.budget, service.budget);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, url, type, enabled, process, _configuration, attributes, created, plan, costs, budget);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Service {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    process: ").append(toIndentedString(process)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

